#!/bin/sh
#
# Copyright 2014-2015 CyberVision, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

TARGET="/usr/lib/kaa-admin"
HPORT=8080
#CPORT=8005
#CWORD="SHUTDOWN"
warned=0
warnlowport=0

checkport() {
  type=$1
  port=$2
  # Fail if port is non-numeric
  num=`expr ${port} + 1 2> /dev/null`
  if [ $? != 0 ] || [ $num -lt 2 ]; then
    echo "Error: ${type} port '${port}' is not a valid TCP port number."
    exit 1
  fi

  # Fail if port is above 65535
  if [ ${port} -gt 65535 ]; then
    echo "Error: ${type} port ${port} is above TCP port numbers (> 65535)."
    exit 1
  fi

  # Warn if port is below 1024 (once)
  if [ ${warnlowport} -eq 0 ]; then 
    if [ ${port} -lt 1024 ]; then
      echo "Warning: ports below 1024 are reserved to the super-user."
      warnlowport=1
      warned=1
    fi
  fi

  # Warn if port appears to be in use
  if hash nmap 2>/dev/null; then
        if nmap -Pn -p"${port}" localhost | awk "\$1 ~ /"${port}"/ {print \$2}" | grep open > /dev/null; then 
            echo "Warning: ${type} port ${port} appears to be in use."
            warned=1
        fi
  else
        if nc localhost "${port}" -z > /dev/null; then
            echo "Warning: ${type} port ${port} appears to be in use."
            warned=1
        fi
  fi

}

# Check ports
checkport HTTP "${HPORT}"
#checkport Control "${CPORT}"

# Ask for confirmation if warnings were printed out
if [ ${warned} -eq 1 ]; then 
  echo "Type <ENTER> to continue, <CTRL-C> to abort."
  read answer
fi

if [ ! -d "${TARGET}" ]; then
   mkdir -p "${TARGET}"
fi

FULLTARGET=`cd "${TARGET}" > /dev/null && pwd`

if [ ! -d "${TARGET}/conf" ]; then
   mkdir "${TARGET}/conf"
fi

if [ ! -d "${TARGET}/logs" ]; then
   mkdir "${TARGET}/logs"
fi

if [ ! -d "${TARGET}/webapps" ]; then
   mkdir "${TARGET}/webapps"
fi

if [ ! -d "${TARGET}/work" ]; then
   mkdir "${TARGET}/work"
fi

if [ ! -d "${TARGET}/temp" ]; then
   mkdir "${TARGET}/temp"
fi

if [ ! -d "${TARGET}/db" ]; then
   mkdir "${TARGET}/db"
fi

sed -i -e "s/jetty.port=8080/jetty.port=${HPORT}/" "${TARGET}/start.d/http.ini"

if [ -h /usr/bin/kaa-admin ]; then
    rm -f /usr/bin/kaa-admin
fi

if [ -h /etc/kaa-admin/conf ]; then
    rm -f /etc/kaa-admin/conf
fi

if [ ! -d /etc/kaa-admin ]; then
    mkdir -p /etc/kaa-admin
fi

if [ ! -d /var/log/kaa ]; then
    mkdir -p /var/log/kaa
fi

chown -R kaa:kaa "${TARGET}"

chown -R kaa:kaa /var/log/kaa
chmod 755 /var/log/kaa

ln -s /usr/lib/kaa-admin/bin/kaa-admin /usr/bin/kaa-admin
ln -s /usr/lib/kaa-admin/conf /etc/kaa-admin/conf

if [ -f /usr/lib/kaa-admin/bin/kaa-admin.default ]; then
    cp -f /usr/lib/kaa-admin/bin/kaa-admin.default /etc/default/kaa-admin
fi

if [ -f /usr/lib/kaa-admin/bin/kaa-admin.init.d ]; then
    cp -f /usr/lib/kaa-admin/bin/kaa-admin.init.d /etc/init.d/kaa-admin
fi

if [ -x "/etc/init.d/kaa-admin" ]; then
	if [ ! -e "/etc/init/kaa-admin.conf" ]; then
		if ! chkconfig_loc="$(type -p "chkconfig")" || [ -z "$chkconfig_loc" ]; then
		    update-rc.d -f kaa-admin defaults >/dev/null
		else
		    chkconfig --add kaa-admin >/dev/null
		fi
	fi
fi


